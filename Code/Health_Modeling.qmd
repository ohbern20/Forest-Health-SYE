---
title: "Healt hModeling"
format: html
---

```{r}
rm(list = ls())
library(tidyverse)
library(here)
library(vegan)
library(ggfortify)
library(ggrepel)
library(ggpubr)


DF <- read.csv(here("Data", "Forest_Trees_and_Regen_2021.csv"), stringsAsFactors = TRUE)
```

## Calculate Tree Diversity Indices 
```{r}
unique(DF$sci_name)
length(unique(DF$sci_name))
#can see there are 31 species
#need to remove NAs
```

Remove NAs
```{r}
DF <- DF[-which(is.na(DF$sci_name)), ]
DF <- DF[-which(DF$sci_name == ""), ]

unique(DF$sci_name)
length(unique(DF$sci_name))
```

Create New DF
```{r}
TreeDiv <- DF %>%
  filter(Type == "Tree") 

#calculate species richness
TreesSR <- length(unique(TreeDiv$sci_name))

#Now get a summary of the number of trees per species per plot
TreeDiv <- TreeDiv %>% group_by(Forest, Plot, sci_name) %>% summarise(num_trees = length(sci_name))


#have the info we need, now transpose it to fit vegan
TreeDiv <- TreeDiv %>%
  relocate(sci_name, .before = Forest) 


#now I will pivot the datatable
TreeDiv <- TreeDiv %>%
  pivot_wider(names_from = sci_name, values_from = num_trees)

#now I will fill in NAs with zeros
TreeDiv[is.na(TreeDiv)]<-0
```


Now I will use the TreeDiv data frame to calculate the following for each of the 5 forests:
a. Average ± standard deviation of species richness of trees (from N = 3 plots)
```{r}
numspec <- specnumber(TreeDiv[,3:23])
```

b. Average ± standard deviation of Shannon index (H') of trees (from N = 3 plots)
```{r}
shannon <- diversity(TreeDiv[,3:23], index = "shannon")
```

c. Average ± standard deviation of Simpson's index (1/Ds, i.e., use index = “invsimpson”) of trees (from N = 3 plots)
```{r}
simpson <- diversity(TreeDiv[,3:23], index = "invsimpson")
```


I will build a dataframe that allows me to compare the diversity values between forests. 
```{r}
Tree_Diversity <- data.frame(Forest = character(15),
                         Plot = numeric(15),
               Simpson = numeric(15),
               Shannon = numeric(15),
               SR = numeric(15))

Tree_Diversity$Forest <- TreeDiv$Forest
Tree_Diversity$Plot <- TreeDiv$Plot
Tree_Diversity$Simpson <- simpson
Tree_Diversity$Shannon <- shannon
Tree_Diversity$SR <- numspec
```

Summarize Tree_Diversity
```{r}
#Tree_Div <- Tree_Diversity %>% group_by(Forest) %>%
# summarize(meanSimpson = mean(Simpson),
#            seSimpson = sd(Simpson)/sqrt(sum(!is.na(Simpson))),
 #           meanShannon = mean(Shannon),
  #          seShannon = sd(Shannon)/sqrt(sum(!is.na(Shannon))),
   #         meanSR = mean(SR),
    #        seSR = sd(SR)/sqrt(sum(!is.na(SR))))

#based on Shannon Index, South Hammond is the most diverse forest, and Degrasse is the least diverse 
```

## Model Tree Diversity Using Shannon Index

First, I need a dataframe that contains Shannon Index and the other potential variables I want as predictors.
```{r}
Canopy <- read.csv(here("Data", "Ground_cover_canopy_density_summer22.csv"))
Regen <- read.csv(here("Data", "Regen_data_summer22.csv"))
```

Now, I will find the mean canopy density for each plot, and then the mean canopy density for each forest using the Canopyapp method
```{r}
canopy_dens <- Canopy |>
  group_by(Forest, Plot_num) |>
  summarise(canopy_density = sum(Canopyapp/4)) |>
  ungroup() |>
  slice(-1, -2)

#now, I will find the canopy density for each forest
#canopy_dens <- canopy_dens |>
 # group_by(Forest) |>
  #summarise(Mean_canopy_dens = sum(plot_dens/3),
   #         SD_canopy_dens = sd(plot_dens))
```


Now, I will find the mean percent ground cover for each forest (I only did one cover plot per forest plot)
```{r}
mean_cover <- Canopy |>
  mutate(Total_cover = (100 - Percent_bare)) |>
  group_by(Forest, Plot_num) |>
  summarise(Mean_ground_cover = sum(Total_cover/12)) |>
  ungroup() |>
  slice(-1, -2)
```

Merge Canopy Density and Ground Cover DFs
```{r}
canopy_ground <- full_join(mean_cover, canopy_dens, join_by(Forest, Plot_num))
```

Now, find Mean Regen Density
```{r}
regen_dens <- DF |> 
  filter(Type == "Sapling" | Type == "Seedling") |>
  group_by(Forest, Plot) |>
  summarise(num_regen = n()) |>
  group_by(Forest, Plot) |>
  summarise(Mean_regen_density = sum(num_regen/9))

#this gives regen density per quadrant (I believe we counted regen in three quadrants per plot) (which is 1m squared?)

#now I'm going to rename Kip Tract to Kip 
regen_dens <- regen_dens |>
  mutate(Forest = as.character(Forest)) |>
  mutate(Forest = replace(Forest, Forest == 'Kip tract', 'Kip'))
```

Now, merge regen_dens with DF from above
```{r}
regen_can_ground <- full_join(canopy_ground, regen_dens, join_by(Forest, Plot_num == Plot))

#merged_dens <- merge(merged_canopy_ground, regen_dens, by = "Forest") 
```

Now, I need to add Shannon Index to merged_dens
```{r}
#first, I will rename Plot in Tree_Diversity to Plot_num
Tree_Diversity <- Tree_Diversity |>
  rename(Plot_num = Plot) |>
  mutate(Forest = as.character(Forest)) |>
  mutate(Forest = replace(Forest, Forest == 'Kip tract', 'Kip'))
  

for_modeling <- full_join(regen_can_ground, Tree_Diversity, join_by(Forest, Plot_num))
```


Print a correlation matrix
```{r}
for_matrix <- for_modeling |> select (-c(Forest, Plot_num))
cor_matrix <- cor(for_matrix)
round(cor_matrix, 3)

#can see that SR and Shannon are HIGHLY correlated, so will not include in model. Will also not use Simpson. 
```


Run a best subsets
```{r}
library(leaps)
library(here)
source(here("ShowSubsets.R"))

subsets_mod <- regsubsets(Shannon ~  Mean_ground_cover + canopy_density + Mean_regen_density, data = for_modeling, method = "forward")

ShowSubsets(subsets_mod)
#canopy density looks like a good predictor
```


```{r}
mod_canopy <- glm(Shannon ~ canopy_density, data = for_modeling)

summary(mod_canopy)
```



Now, using for_modeling, I will attempt to create a model to predict forest health (with Shannon Div as a proxy) based on other variables 
- could add deer abundance later 
```{r}
mod1 <- glm(Shannon ~ canopy_density + Mean_ground_cover + Mean_regen_density, data = for_modeling, family = binomial()) 

summary(mod1)
```

```{r}
mod2 <- lm(Shannon ~ canopy_density + Mean_ground_cover, data = for_modeling) 

summary(mod2)
```

```{r}
mod3 <- lm(Shannon ~ canopy_density + Mean_regen_density, data = for_modeling) 

summary(mod3)
#this model seems fairly good, with a p-value of 0.065 and a Multiple R-Squared of 0.9349
```

```{r}
mod4 <- lm(Shannon ~ Mean_ground_cover + Mean_regen_density, data = for_modeling) 

summary(mod4)
```

Out of the models I looked at to predict Shannon, Mod3 did the best job. It had the lowest p-value, and still had a high R-squared. 

## Calculate Sapling/seedling Diversity  

Create New DF
```{r}
SapDiv <- DF %>%
  filter(Type == "Seedling" | Type == "Sapling") 

#calculate species richness
SapSR <- length(unique(SapDiv$sci_name))

#Now get a summary of the number of sapling per species per plot
SapDiv <- SapDiv %>% group_by(Forest, Plot, sci_name) %>% summarize(num_saps = length(sci_name))


#have the info we need, now transpose it to fit vegan
SapDiv <- SapDiv %>%
  relocate(sci_name, .before = Forest) 


#now I will pivot the datatable
SapDiv <- SapDiv %>%
  pivot_wider(names_from = sci_name, values_from = num_saps)

#now I will fill in NAs with zeros
SapDiv[is.na(SapDiv)]<-0
```


Now I will use the TreeDiv data frame to calculate the following for each of the 5 forests:
a. Average ± standard deviation of species richness of trees (from N = 3 plots)
```{r}
numspec <- specnumber(SapDiv)
```

b. Average ± standard deviation of Shannon index (H') of trees (from N = 3 plots)
```{r}
shannon_sap <- diversity(SapDiv[,3:23], index = "shannon")
```

c. Average ± standard deviation of Simpson's index (1/Ds, i.e., use index = “invsimpson”) of trees (from N = 3 plots)
```{r}
simpson_sap <- diversity(SapDiv[,3:23], index = "invsimpson")
```


I will build a dataframe that allows me to compare the diversity values between forests. 
```{r}
Tree_Diversity <- data.frame(Forest = character(15),
                         Plot = numeric(15),
               Simpson = numeric(15),
               Shannon = numeric(15),
               SR = numeric(15))

Tree_Diversity$Forest <- TreeDiv$Forest
Tree_Diversity$Plot <- TreeDiv$Plot
Tree_Diversity$Simpson <- simpson_sap
Tree_Diversity$Shannon <- shannon_sap
Tree_Diversity$SR <- numspec
```

Summarize Tree_Diversity
```{r}
Tree_Div <- Tree_Diversity %>% group_by(Forest) %>%
  summarize(meanSimpson = mean(Simpson),
            seSimpson = sd(Simpson)/sqrt(sum(!is.na(Simpson))),
            meanShannon = mean(Shannon),
            seShannon = sd(Shannon)/sqrt(sum(!is.na(Shannon))),
            meanSR = mean(SR),
            seSR = sd(SR)/sqrt(sum(!is.na(SR))))

#based on Shannon Index, South Hammond is the most divese forest, and Degrasse is the least diverse 
```





